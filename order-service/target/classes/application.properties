spring.datasource.url = jdbc:mysql://localhost:3306/Mega_Project?useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username = root
spring.datasource.password = Root1234
server.port=9090

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

 #Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name =Order-Service


#actuator properties
management.health.circuitbreakers.enabled=true
management.endpoints.web-exposure=*
management.endpoint.health.show-details=always

#Resielence4j properties
#The word "inventory" is matched with name attribute in servcie call.
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.instances.even-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThresHold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true



##Resielence4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration =3s

##Resielence4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s





#kafka producer properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.group-id=notificationId
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping =event:com.orderservice.event.OrderPlacedEvent
spring.kafka.producer.properties.spring.json.trusted.packages=*
#spring.kafka.producer.properties.spring.json.trusted.packages=com.orderservice.event.OrderPlacedEvent
#spring.kafka.producer.properties.spring.json.add.type.headers=false




















